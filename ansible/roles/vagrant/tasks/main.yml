- name: Create base directory
  file:
    state: directory
    path: /var/www
    owner: www-data
    group: www-data

- name: Link project
  file:
    state: link
    src: /vagrant
    dest: /var/www/current
    force: yes
    owner: www-data
    group: www-data

- name: Download composer
  get_url:
    url: https://getcomposer.org/installer
    dest: "/tmp/installer"
  tags: composer

- name: Install composer
  shell: "cat /tmp/installer | php -- --install-dir=/usr/local/bin --filename=composer"
  args:
    creates: /usr/local/bin/composer
  tags: composer

- name: make composer executable
  file:
    path: /usr/local/bin/composer
    mode: a+x
    state: file
  tags: composer

- name: Check if sass exists
  stat:
    path: /usr/local/bin/sass
  register: sass

- name: Install sass
  command: gem install sass
  args:
    creates: /usr/local/bin/sass

- name: Install bower
  command: npm install -g bower
  args:
    creates: /usr/local/bin/bower

- name: Fix bower
  file:
    state: link
    src: /usr/bin/nodejs
    path: /usr/bin/node

- name: Change nginx user
  lineinfile:
    name: /etc/nginx/nginx.conf
    regexp: '^user'
    line: 'user vagrant;'

- name: Change php-fpm owner
  lineinfile:
    name: /etc/php5/fpm/pool.d/www.conf
    regexp: '^listen\.owner.*www-data'
    line: 'listen.owner = vagrant'

- name: Change php-fpm group
  lineinfile:
    name: /etc/php5/fpm/pool.d/www.conf
    regexp: '^listen\.group.*www-data'
    line: 'listen.group = vagrant'

- name: Change php-fpm socket permissions
  file:
    path: /var/run/www.sock
    owner: vagrant
    group: vagrant
  tags:
    - config

- name: Run composer
  command: composer install
  args:
    chdir: "{{ project_path }}"
  become: yes
  become_user: vagrant

- name: Compile assets
  command: "sass --update --force htdocs/assets/sass:/vagrant/htdocs/assets/css"
  args:
    chdir: '{{project_path}}'
  become: yes
  become_user: vagrant

- name: Seed database, publish assets and create admin user
  shell: >
    php artisan asset:publish &&
    php artisan db:seed --env=local &&
    php artisan migrate --package="cartalyst/sentry" --env=local &&
    php artisan migrate --package="mrjuliuss/syntara" --env=local &&
    php artisan migrate --package="filmoteca/static-pages" --env=local &&
    php artisan create:group --env=local &&
    php artisan create:user filmoteca filmoteca@unam.mx filmoteca Admin --env=local &&
    php artisan asset:publish frozennode/administrator --env=local
  args:
      chdir: '{{project_path}}'
      creates: '{{project_path}}/htdocs/packages'
  tags: artisan
